"""create table

Revision ID: abcdb2f76d16
Revises: 
Create Date: 2020-07-24 15:56:16.762425

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'abcdb2f76d16'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('examengine_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('engine_code', sa.String(length=50), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('login_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('otp_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('otp', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_iframe',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('iframeid', sa.Integer(), nullable=False),
    sa.Column('iframeurl', sa.String(length=25), nullable=True),
    sa.Column('created_dt', sa.TIMESTAMP(), server_default=sa.text(u'(now())'), nullable=True),
    sa.Column('deleteflag', sa.Boolean(), server_default='False', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iframeid')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('ADMIN', 'CANDIDATE', 'CUSTOMER', 'PROCTOR', name='usertype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('admin_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('organization', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proctor_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidateLogsTbl',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('candidateUsername', sa.String(length=20), nullable=False),
    sa.Column('candidateLogs', sa.String(), nullable=False),
    sa.Column('logtime', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('project_name', sa.String(length=155), nullable=False),
    sa.Column('created_dt', sa.TIMESTAMP(), server_default=sa.text(u'(now())'), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('start', sa.TIMESTAMP(), nullable=False),
    sa.Column('end', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message', sa.String(length=225), nullable=True),
    sa.Column('fromid', sa.String(length=25), nullable=True),
    sa.Column('toid', sa.String(length=25), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('created_dt', sa.TIMESTAMP(), server_default=sa.text(u'(now())'), nullable=True),
    sa.Column('deleteflag', sa.Boolean(), server_default='False', nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_proctor_map',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('proctor_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch_details.id'], ),
    sa.ForeignKeyConstraint(['proctor_id'], ['proctor_details.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proctor_candidate_map',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('proctor_id', sa.Integer(), nullable=True),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch_details.id'], ),
    sa.ForeignKeyConstraint(['candidate_id'], ['customer_details.id'], ),
    sa.ForeignKeyConstraint(['proctor_id'], ['proctor_details.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('proctor_candidate_map')
    op.drop_table('batch_proctor_map')
    op.drop_table('tb_notification')
    op.drop_table('batch_details')
    op.drop_table('project')
    op.drop_table('candidateLogsTbl')
    op.drop_table('proctor_details')
    op.drop_table('customer_details')
    op.drop_table('candidate_details')
    op.drop_table('admin_details')
    op.drop_table('users')
    op.drop_table('tb_iframe')
    op.drop_table('otp_table')
    op.drop_table('login_status')
    op.drop_table('examengine_details')
    # ### end Alembic commands ###
